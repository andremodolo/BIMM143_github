---
title: "COVID-19_Vaccination_Rates_Class17"
author: "Andre Modolo"
format: docx
---

# Import vaccination data

```{r}
vax <- read.csv("covid19vaccinesbyzipcode_test.csv")
head(vax)
```

#Q1. What column details the total number of people fully vaccinated? 

persons_fully_vaccinated

#Q2. What column details the Zip code tabulation area? 

zip_code_tabulation_area

#Q3. What is the earliest date in this dataset?
```{r}
head(sort(vax$as_of_date, decreasing = F))
```
The earliest date is 2021-01-05

#Q4. What is the latest date in this dataset?
```{r}
head(sort(vax$as_of_date, decreasing = T))
```
2023-02-28

```{r}
skimr::skim(vax)
```
#Q5. How many numeric columns are in this dataset?

13

#Q6. Note that there are “missing values” in the dataset. How many NA values there in the persons_fully_vaccinated column? 

```{r}
sum(is.na(vax$persons_fully_vaccinated))
```

16525	missing values4

#Q7. What percent of persons_fully_vaccinated values are missing (to 2 significant figures)? 

```{r}
n.missing <- sum(is.na(vax$persons_fully_vaccinated))
round((n.missing / nrow(vax)*100), 2)
```
8.29%

#Q8. [Optional]: Why might this data be missing?
The data could be withheld by the counties or places. 

# Working with dates

```{r}
library(lubridate)
```

```{r}
today()
```

In order to do math with the dates we need year month day format `ymd`

```{r}
vax$as_of_date <- ymd(vax$as_of_date)
today()- ymd("2021-01-05")
```

Lets see how old I am in days

```{r}
today()- ymd("2000-11-05")
```

```{r}
today() - ymd("2001-10-10")
```

How many dates have passed since the first vaccination reported in this data set?

```{r}
today() - vax$as_of_date[1]
```

How many days does this dataset span. 

```{r}
vax$as_of_date[nrow(vax)]- vax$as_of_date[1]
```

#Q9. How many days have passed since the last update of the dataset? 

```{r}
today() - vax$as_of_date[nrow(vax)]
```


#Q10. How many unique dates are in the dataset (i.e. how many different dates are detailed)? 

```{r}
length(unique(vax$as_of_date))
```

```{r}
library(dplyr)

n_distinct(vax$as_of_date)
```

#Working with ZIP codes

```{r}
library(zipcodeR)
```

calculate the distance from here to my home town in Sacramento

```{r}
geocode_zip("92037")
```

lets see how far UCSD is from my home town in Sacramento 

```{r}
zip_distance("92037", "95765")
```

```{r}
reverse_zipcode(c("92037", "92109"))
```

# Focus on the San Diego area
Using dplyr the code would look like this:
```{r}
library(dplyr)

sd <- filter(vax, county == "San Diego")

nrow(sd)
```

#Q11. How many distinct zip codes are listed for San Diego County?
```{r}
length(unique(sd$zip_code_tabulation_area))
```

Using dplyr is often more convenient when we are subsetting across multiple criteria - for example all San Diego county areas with a population of over 10,000

```{r}
sd.10 <- filter(vax, county == "San Diego" &
                age5_plus_population > 10000)
nrow(sd.10)
```

#Q12. What San Diego County Zip code area has the largest 12 + Population in this dataset? 

```{r}
sd %>%
  arrange(desc(age12_plus_population))
```

This way we find that 92154 has the highest 12+ population

#Q13. What is the overall average “Percent of Population Fully Vaccinated” value for all San Diego “County” as of todayish “2023-02-28”?

```{r}
sd.today <- filter(sd, as_of_date == "2023-02-28")
mean(sd.today$percent_of_population_fully_vaccinated, na.rm=T)
```


#Q14. Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of “2023-02-28”?

Not using ggplot

```{r}
hist(sd.today$percent_of_population_fully_vaccinated)
```

```{r}
library(ggplot2)

ggplot(sd) + aes(percent_of_population_fully_vaccinated) + geom_histogram(bins=10) + xlab("Percent of Population Fully Vaccinated")

```

# Focus on UCSD / La Jolla

```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population
```

#Q15. Using ggplot make a graph of the vaccination rate time course for the 92037 ZIP code area:

```{r}
ggplot(ucsd) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs("Date", y="Percent Vaccinated")
```

# Comparing to similar sized areas

```{r}
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2023-02-28")
```

#Q16. Calculate the mean “Percent of Population Fully Vaccinated” for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2022-11-15”. Add this as a straight horizontal line to your plot from above with the geom_hline() function?

```{r}
ave <- mean(vax.36$percent_of_population_fully_vaccinated)
ave
```

```{r}
ggplot(ucsd) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) + 
  ylim(c(0,1)) +
  labs("Date", y="Percent Vaccinated") +
  geom_hline(yintercept = ave, col = "red", linetype=2)
```

#Q17. What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the “Percent of Population Fully Vaccinated” values for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2023-02-28”?

```{r}
vax.36sum <- summary(vax.36$percent_of_population_fully_vaccinated)
vax.36sum
```


#Q18. Using ggplot generate a histogram of this data.

```{r}
ggplot(vax.36) + aes(percent_of_population_fully_vaccinated) + geom_histogram() + xlim(0,1)
```

#Q19. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

```{r}
mean92040 <- vax %>% filter(as_of_date == "2023-02-28") %>%  
  filter(zip_code_tabulation_area=="92040") %>%
  select(percent_of_population_fully_vaccinated)
mean92040 >= ave
```

92040 is below the average 

```{r}
mean92109 <- vax %>% filter(as_of_date == "2023-02-28") %>%  
  filter(zip_code_tabulation_area=="92109") %>%
  select(percent_of_population_fully_vaccinated)
mean92109 >= ave
```

92109 is also below the average 

#Q20. Finally make a time course plot of vaccination progress for all areas in the full dataset with a age5_plus_population > 36144.

```{r}
vax.36.all <- filter(vax, age5_plus_population > 36144)


ggplot(vax.36.all) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="blue") +
  ylim(0,1) +
  labs(x="Date", y=" percent of population fully vaccinated",
       title="Vaccination Rate Across California",
       subtitle="Only areas with population above 36k are shown") +
  geom_hline(yintercept = 0.7213, linetype=2)
```












